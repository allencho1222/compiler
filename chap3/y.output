State 1 conflicts: 1 reduce/reduce
State 18 conflicts: 2 shift/reduce
State 58 conflicts: 2 shift/reduce
State 59 conflicts: 2 shift/reduce
State 60 conflicts: 2 shift/reduce
State 61 conflicts: 2 shift/reduce
State 62 conflicts: 2 shift/reduce
State 63 conflicts: 2 shift/reduce
State 64 conflicts: 2 shift/reduce
State 65 conflicts: 2 shift/reduce
State 66 conflicts: 2 shift/reduce
State 67 conflicts: 2 shift/reduce
State 68 conflicts: 12 shift/reduce
State 69 conflicts: 12 shift/reduce
State 75 conflicts: 12 shift/reduce
State 76 conflicts: 13 shift/reduce
State 77 conflicts: 12 shift/reduce
State 103 conflicts: 12 shift/reduce
State 111 conflicts: 12 shift/reduce
State 124 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: lvalue
    3    | NIL
    4    | LPAREN RPAREN
    5    | INT
    6    | STRING
    7    | MINUS exp
    8    | exp PLUS exp
    9    | exp MINUS exp
   10    | exp TIMES exp
   11    | exp DIVIDE exp
   12    | exp EQ exp
   13    | exp NEQ exp
   14    | exp LT exp
   15    | exp LE exp
   16    | exp GT exp
   17    | exp GE exp
   18    | exp AND exp
   19    | exp OR exp
   20    | typeid LBRACE rec RBRACE
   21    | typeid LBRACK exp RBRACK OF exp
   22    | lvalue ASSIGN exp
   23    | IF exp THEN exp ELSE exp
   24    | IF exp THEN exp
   25    | WHILE exp DO exp
   26    | FOR ID ASSIGN exp TO exp DO exp
   27    | BREAK
   28    | LET decs IN expseq END
   29    | LPAREN exp RPAREN

   30 expseq: exp SEMICOLON expseq
   31       | exp

   32 rec: ID EQ exp recList

   33 recList: COMMA rec
   34        | /* empty */
   35        | ID EQ exp

   36 decs: dec decs
   37     | /* empty */

   38 dec: tydec
   39    | vardec
   40    | fundec

   41 tydec: TYPE typeid EQ ty

   42 ty: typeid
   43   | LBRACE tyfields RBRACE
   44   | ARRAY OF typeid

   45 typeid: ID

   46 tyfields: /* empty */
   47         | ID COLON typeid tyfieldsList

   48 tyfieldsList: COMMA tyfields
   49             | /* empty */

   50 vardec: VAR ID ASSIGN exp
   51       | VAR ID COLON typeid ASSIGN exp

   52 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   53       | FUNCTION ID LPAREN tyfields RPAREN COLON typeid EQ exp

   54 lvalue: ID
   55       | lvalue DOT ID
   56       | lvalue LBRACK exp RBRACK


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 26 32 35 45 47 50 51 52 53 54 55
STRING (259) 6
INT (260) 5
COMMA (261) 33 48
COLON (262) 47 51 53
SEMICOLON (263) 30
LPAREN (264) 4 29 52 53
RPAREN (265) 4 29 52 53
LBRACK (266) 21 56
RBRACK (267) 21 56
LBRACE (268) 20 43
RBRACE (269) 20 43
DOT (270) 55
PLUS (271) 8
MINUS (272) 7 9
TIMES (273) 10
DIVIDE (274) 11
EQ (275) 12 32 35 41 52 53
NEQ (276) 13
LT (277) 14
LE (278) 15
GT (279) 16
GE (280) 17
AND (281) 18
OR (282) 19
ASSIGN (283) 22 26 50 51
ARRAY (284) 44
IF (285) 23 24
THEN (286) 23 24
ELSE (287) 23
WHILE (288) 25
FOR (289) 26
TO (290) 26
DO (291) 25 26
LET (292) 28
IN (293) 28
END (294) 28
OF (295) 21 44
BREAK (296) 27
NIL (297) 3
FUNCTION (298) 52 53
VAR (299) 50 51
TYPE (300) 41
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
exp (49)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29, on right: 1 7 8 9 10 11 12 13 14 15 16 17
    18 19 21 22 23 24 25 26 29 30 31 32 35 50 51 52 53 56
expseq (50)
    on left: 30 31, on right: 28 30
rec (51)
    on left: 32, on right: 20 33
recList (52)
    on left: 33 34 35, on right: 32
decs (53)
    on left: 36 37, on right: 28 36
dec (54)
    on left: 38 39 40, on right: 36
tydec (55)
    on left: 41, on right: 38
ty (56)
    on left: 42 43 44, on right: 41
typeid (57)
    on left: 45, on right: 20 21 41 42 44 47 51 53
tyfields (58)
    on left: 46 47, on right: 43 48 52 53
tyfieldsList (59)
    on left: 48 49, on right: 47
vardec (60)
    on left: 50 51, on right: 39
fundec (61)
    on left: 52 53, on right: 40
lvalue (62)
    on left: 54 55 56, on right: 2 22 55 56


state 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program  go to state 12
    exp      go to state 13
    typeid   go to state 14
    lvalue   go to state 15


state 1

   45 typeid: ID .
   54 lvalue: ID .

    LBRACK    reduce using rule 45 (typeid)
    LBRACK    [reduce using rule 54 (lvalue)]
    LBRACE    reduce using rule 45 (typeid)
    $default  reduce using rule 54 (lvalue)


state 2

    6 exp: STRING .

    $default  reduce using rule 6 (exp)


state 3

    5 exp: INT .

    $default  reduce using rule 5 (exp)


state 4

    4 exp: LPAREN . RPAREN
   29    | LPAREN . exp RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 16
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 17
    typeid  go to state 14
    lvalue  go to state 15


state 5

    7 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 18
    typeid  go to state 14
    lvalue  go to state 15


state 6

   23 exp: IF . exp THEN exp ELSE exp
   24    | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 19
    typeid  go to state 14
    lvalue  go to state 15


state 7

   25 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 20
    typeid  go to state 14
    lvalue  go to state 15


state 8

   26 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 21


state 9

   28 exp: LET . decs IN expseq END

    FUNCTION  shift, and go to state 22
    VAR       shift, and go to state 23
    TYPE      shift, and go to state 24

    $default  reduce using rule 37 (decs)

    decs    go to state 25
    dec     go to state 26
    tydec   go to state 27
    vardec  go to state 28
    fundec  go to state 29


state 10

   27 exp: BREAK .

    $default  reduce using rule 27 (exp)


state 11

    3 exp: NIL .

    $default  reduce using rule 3 (exp)


state 12

    0 $accept: program . $end

    $end  shift, and go to state 30


state 13

    1 program: exp .
    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    $default  reduce using rule 1 (program)


state 14

   20 exp: typeid . LBRACE rec RBRACE
   21    | typeid . LBRACK exp RBRACK OF exp

    LBRACK  shift, and go to state 43
    LBRACE  shift, and go to state 44


state 15

    2 exp: lvalue .
   22    | lvalue . ASSIGN exp
   55 lvalue: lvalue . DOT ID
   56       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 45
    DOT     shift, and go to state 46
    ASSIGN  shift, and go to state 47

    $default  reduce using rule 2 (exp)


state 16

    4 exp: LPAREN RPAREN .

    $default  reduce using rule 4 (exp)


state 17

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   29    | LPAREN exp . RPAREN

    RPAREN  shift, and go to state 48
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42


state 18

    7 exp: MINUS exp .
    8    | exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp

    AND  shift, and go to state 41
    OR   shift, and go to state 42

    AND       [reduce using rule 7 (exp)]
    OR        [reduce using rule 7 (exp)]
    $default  reduce using rule 7 (exp)


state 19

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   23    | IF exp . THEN exp ELSE exp
   24    | IF exp . THEN exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42
    THEN    shift, and go to state 49


state 20

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   25    | WHILE exp . DO exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42
    DO      shift, and go to state 50


state 21

   26 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 51


state 22

   52 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   53       | FUNCTION . ID LPAREN tyfields RPAREN COLON typeid EQ exp

    ID  shift, and go to state 52


state 23

   50 vardec: VAR . ID ASSIGN exp
   51       | VAR . ID COLON typeid ASSIGN exp

    ID  shift, and go to state 53


state 24

   41 tydec: TYPE . typeid EQ ty

    ID  shift, and go to state 54

    typeid  go to state 55


state 25

   28 exp: LET decs . IN expseq END

    IN  shift, and go to state 56


state 26

   36 decs: dec . decs

    FUNCTION  shift, and go to state 22
    VAR       shift, and go to state 23
    TYPE      shift, and go to state 24

    $default  reduce using rule 37 (decs)

    decs    go to state 57
    dec     go to state 26
    tydec   go to state 27
    vardec  go to state 28
    fundec  go to state 29


state 27

   38 dec: tydec .

    $default  reduce using rule 38 (dec)


state 28

   39 dec: vardec .

    $default  reduce using rule 39 (dec)


state 29

   40 dec: fundec .

    $default  reduce using rule 40 (dec)


state 30

    0 $accept: program $end .

    $default  accept


state 31

    8 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 58
    typeid  go to state 14
    lvalue  go to state 15


state 32

    9 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 59
    typeid  go to state 14
    lvalue  go to state 15


state 33

   10 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 60
    typeid  go to state 14
    lvalue  go to state 15


state 34

   11 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 61
    typeid  go to state 14
    lvalue  go to state 15


state 35

   12 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 62
    typeid  go to state 14
    lvalue  go to state 15


state 36

   13 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 63
    typeid  go to state 14
    lvalue  go to state 15


state 37

   14 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 64
    typeid  go to state 14
    lvalue  go to state 15


state 38

   15 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 65
    typeid  go to state 14
    lvalue  go to state 15


state 39

   16 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 66
    typeid  go to state 14
    lvalue  go to state 15


state 40

   17 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 67
    typeid  go to state 14
    lvalue  go to state 15


state 41

   18 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 68
    typeid  go to state 14
    lvalue  go to state 15


state 42

   19 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 69
    typeid  go to state 14
    lvalue  go to state 15


state 43

   21 exp: typeid LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 70
    typeid  go to state 14
    lvalue  go to state 15


state 44

   20 exp: typeid LBRACE . rec RBRACE

    ID  shift, and go to state 71

    rec  go to state 72


state 45

   56 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 73
    typeid  go to state 14
    lvalue  go to state 15


state 46

   55 lvalue: lvalue DOT . ID

    ID  shift, and go to state 74


state 47

   22 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 75
    typeid  go to state 14
    lvalue  go to state 15


state 48

   29 exp: LPAREN exp RPAREN .

    $default  reduce using rule 29 (exp)


state 49

   23 exp: IF exp THEN . exp ELSE exp
   24    | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 76
    typeid  go to state 14
    lvalue  go to state 15


state 50

   25 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 77
    typeid  go to state 14
    lvalue  go to state 15


state 51

   26 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 78
    typeid  go to state 14
    lvalue  go to state 15


state 52

   52 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   53       | FUNCTION ID . LPAREN tyfields RPAREN COLON typeid EQ exp

    LPAREN  shift, and go to state 79


state 53

   50 vardec: VAR ID . ASSIGN exp
   51       | VAR ID . COLON typeid ASSIGN exp

    COLON   shift, and go to state 80
    ASSIGN  shift, and go to state 81


state 54

   45 typeid: ID .

    $default  reduce using rule 45 (typeid)


state 55

   41 tydec: TYPE typeid . EQ ty

    EQ  shift, and go to state 82


state 56

   28 exp: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 83
    expseq  go to state 84
    typeid  go to state 14
    lvalue  go to state 15


state 57

   36 decs: dec decs .

    $default  reduce using rule 36 (decs)


state 58

    8 exp: exp . PLUS exp
    8    | exp PLUS exp .
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp

    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    AND       [reduce using rule 8 (exp)]
    OR        [reduce using rule 8 (exp)]
    $default  reduce using rule 8 (exp)


state 59

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
    9    | exp MINUS exp .
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp

    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    AND       [reduce using rule 9 (exp)]
    OR        [reduce using rule 9 (exp)]
    $default  reduce using rule 9 (exp)


state 60

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   10    | exp TIMES exp .
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp

    AND  shift, and go to state 41
    OR   shift, and go to state 42

    AND       [reduce using rule 10 (exp)]
    OR        [reduce using rule 10 (exp)]
    $default  reduce using rule 10 (exp)


state 61

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   11    | exp DIVIDE exp .
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp

    AND  shift, and go to state 41
    OR   shift, and go to state 42

    AND       [reduce using rule 11 (exp)]
    OR        [reduce using rule 11 (exp)]
    $default  reduce using rule 11 (exp)


state 62

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   12    | exp EQ exp .
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    AND       [reduce using rule 12 (exp)]
    OR        [reduce using rule 12 (exp)]
    $default  reduce using rule 12 (exp)


state 63

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   13    | exp NEQ exp .
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    AND       [reduce using rule 13 (exp)]
    OR        [reduce using rule 13 (exp)]
    $default  reduce using rule 13 (exp)


state 64

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   14    | exp LT exp .
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    AND       [reduce using rule 14 (exp)]
    OR        [reduce using rule 14 (exp)]
    $default  reduce using rule 14 (exp)


state 65

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   15    | exp LE exp .
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    AND       [reduce using rule 15 (exp)]
    OR        [reduce using rule 15 (exp)]
    $default  reduce using rule 15 (exp)


state 66

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   16    | exp GT exp .
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    AND       [reduce using rule 16 (exp)]
    OR        [reduce using rule 16 (exp)]
    $default  reduce using rule 16 (exp)


state 67

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   17    | exp GE exp .
   18    | exp . AND exp
   19    | exp . OR exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    AND       [reduce using rule 17 (exp)]
    OR        [reduce using rule 17 (exp)]
    $default  reduce using rule 17 (exp)


state 68

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   18    | exp AND exp .
   19    | exp . OR exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    PLUS      [reduce using rule 18 (exp)]
    MINUS     [reduce using rule 18 (exp)]
    TIMES     [reduce using rule 18 (exp)]
    DIVIDE    [reduce using rule 18 (exp)]
    EQ        [reduce using rule 18 (exp)]
    NEQ       [reduce using rule 18 (exp)]
    LT        [reduce using rule 18 (exp)]
    LE        [reduce using rule 18 (exp)]
    GT        [reduce using rule 18 (exp)]
    GE        [reduce using rule 18 (exp)]
    AND       [reduce using rule 18 (exp)]
    OR        [reduce using rule 18 (exp)]
    $default  reduce using rule 18 (exp)


state 69

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   19    | exp OR exp .

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    PLUS      [reduce using rule 19 (exp)]
    MINUS     [reduce using rule 19 (exp)]
    TIMES     [reduce using rule 19 (exp)]
    DIVIDE    [reduce using rule 19 (exp)]
    EQ        [reduce using rule 19 (exp)]
    NEQ       [reduce using rule 19 (exp)]
    LT        [reduce using rule 19 (exp)]
    LE        [reduce using rule 19 (exp)]
    GT        [reduce using rule 19 (exp)]
    GE        [reduce using rule 19 (exp)]
    AND       [reduce using rule 19 (exp)]
    OR        [reduce using rule 19 (exp)]
    $default  reduce using rule 19 (exp)


state 70

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   21    | typeid LBRACK exp . RBRACK OF exp

    RBRACK  shift, and go to state 85
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42


state 71

   32 rec: ID . EQ exp recList

    EQ  shift, and go to state 86


state 72

   20 exp: typeid LBRACE rec . RBRACE

    RBRACE  shift, and go to state 87


state 73

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   56 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 88
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42


state 74

   55 lvalue: lvalue DOT ID .

    $default  reduce using rule 55 (lvalue)


state 75

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   22    | lvalue ASSIGN exp .

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    PLUS      [reduce using rule 22 (exp)]
    MINUS     [reduce using rule 22 (exp)]
    TIMES     [reduce using rule 22 (exp)]
    DIVIDE    [reduce using rule 22 (exp)]
    EQ        [reduce using rule 22 (exp)]
    NEQ       [reduce using rule 22 (exp)]
    LT        [reduce using rule 22 (exp)]
    LE        [reduce using rule 22 (exp)]
    GT        [reduce using rule 22 (exp)]
    GE        [reduce using rule 22 (exp)]
    AND       [reduce using rule 22 (exp)]
    OR        [reduce using rule 22 (exp)]
    $default  reduce using rule 22 (exp)


state 76

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   23    | IF exp THEN exp . ELSE exp
   24    | IF exp THEN exp .

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42
    ELSE    shift, and go to state 89

    PLUS      [reduce using rule 24 (exp)]
    MINUS     [reduce using rule 24 (exp)]
    TIMES     [reduce using rule 24 (exp)]
    DIVIDE    [reduce using rule 24 (exp)]
    EQ        [reduce using rule 24 (exp)]
    NEQ       [reduce using rule 24 (exp)]
    LT        [reduce using rule 24 (exp)]
    LE        [reduce using rule 24 (exp)]
    GT        [reduce using rule 24 (exp)]
    GE        [reduce using rule 24 (exp)]
    AND       [reduce using rule 24 (exp)]
    OR        [reduce using rule 24 (exp)]
    ELSE      [reduce using rule 24 (exp)]
    $default  reduce using rule 24 (exp)


state 77

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   25    | WHILE exp DO exp .

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    PLUS      [reduce using rule 25 (exp)]
    MINUS     [reduce using rule 25 (exp)]
    TIMES     [reduce using rule 25 (exp)]
    DIVIDE    [reduce using rule 25 (exp)]
    EQ        [reduce using rule 25 (exp)]
    NEQ       [reduce using rule 25 (exp)]
    LT        [reduce using rule 25 (exp)]
    LE        [reduce using rule 25 (exp)]
    GT        [reduce using rule 25 (exp)]
    GE        [reduce using rule 25 (exp)]
    AND       [reduce using rule 25 (exp)]
    OR        [reduce using rule 25 (exp)]
    $default  reduce using rule 25 (exp)


state 78

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   26    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42
    TO      shift, and go to state 90


state 79

   52 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   53       | FUNCTION ID LPAREN . tyfields RPAREN COLON typeid EQ exp

    ID  shift, and go to state 91

    $default  reduce using rule 46 (tyfields)

    tyfields  go to state 92


state 80

   51 vardec: VAR ID COLON . typeid ASSIGN exp

    ID  shift, and go to state 54

    typeid  go to state 93


state 81

   50 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 94
    typeid  go to state 14
    lvalue  go to state 15


state 82

   41 tydec: TYPE typeid EQ . ty

    ID      shift, and go to state 54
    LBRACE  shift, and go to state 95
    ARRAY   shift, and go to state 96

    ty      go to state 97
    typeid  go to state 98


state 83

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   30 expseq: exp . SEMICOLON expseq
   31       | exp .

    SEMICOLON  shift, and go to state 99
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    TIMES      shift, and go to state 33
    DIVIDE     shift, and go to state 34
    EQ         shift, and go to state 35
    NEQ        shift, and go to state 36
    LT         shift, and go to state 37
    LE         shift, and go to state 38
    GT         shift, and go to state 39
    GE         shift, and go to state 40
    AND        shift, and go to state 41
    OR         shift, and go to state 42

    $default  reduce using rule 31 (expseq)


state 84

   28 exp: LET decs IN expseq . END

    END  shift, and go to state 100


state 85

   21 exp: typeid LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 101


state 86

   32 rec: ID EQ . exp recList

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 102
    typeid  go to state 14
    lvalue  go to state 15


state 87

   20 exp: typeid LBRACE rec RBRACE .

    $default  reduce using rule 20 (exp)


state 88

   56 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 56 (lvalue)


state 89

   23 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 103
    typeid  go to state 14
    lvalue  go to state 15


state 90

   26 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 104
    typeid  go to state 14
    lvalue  go to state 15


state 91

   47 tyfields: ID . COLON typeid tyfieldsList

    COLON  shift, and go to state 105


state 92

   52 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   53       | FUNCTION ID LPAREN tyfields . RPAREN COLON typeid EQ exp

    RPAREN  shift, and go to state 106


state 93

   51 vardec: VAR ID COLON typeid . ASSIGN exp

    ASSIGN  shift, and go to state 107


state 94

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   50 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    $default  reduce using rule 50 (vardec)


state 95

   43 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 91

    $default  reduce using rule 46 (tyfields)

    tyfields  go to state 108


state 96

   44 ty: ARRAY . OF typeid

    OF  shift, and go to state 109


state 97

   41 tydec: TYPE typeid EQ ty .

    $default  reduce using rule 41 (tydec)


state 98

   42 ty: typeid .

    $default  reduce using rule 42 (ty)


state 99

   30 expseq: exp SEMICOLON . expseq

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 83
    expseq  go to state 110
    typeid  go to state 14
    lvalue  go to state 15


state 100

   28 exp: LET decs IN expseq END .

    $default  reduce using rule 28 (exp)


state 101

   21 exp: typeid LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 111
    typeid  go to state 14
    lvalue  go to state 15


state 102

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   32 rec: ID EQ exp . recList

    ID      shift, and go to state 112
    COMMA   shift, and go to state 113
    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    $default  reduce using rule 34 (recList)

    recList  go to state 114


state 103

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   23    | IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    PLUS      [reduce using rule 23 (exp)]
    MINUS     [reduce using rule 23 (exp)]
    TIMES     [reduce using rule 23 (exp)]
    DIVIDE    [reduce using rule 23 (exp)]
    EQ        [reduce using rule 23 (exp)]
    NEQ       [reduce using rule 23 (exp)]
    LT        [reduce using rule 23 (exp)]
    LE        [reduce using rule 23 (exp)]
    GT        [reduce using rule 23 (exp)]
    GE        [reduce using rule 23 (exp)]
    AND       [reduce using rule 23 (exp)]
    OR        [reduce using rule 23 (exp)]
    $default  reduce using rule 23 (exp)


state 104

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   26    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42
    DO      shift, and go to state 115


state 105

   47 tyfields: ID COLON . typeid tyfieldsList

    ID  shift, and go to state 54

    typeid  go to state 116


state 106

   52 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   53       | FUNCTION ID LPAREN tyfields RPAREN . COLON typeid EQ exp

    COLON  shift, and go to state 117
    EQ     shift, and go to state 118


state 107

   51 vardec: VAR ID COLON typeid ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 119
    typeid  go to state 14
    lvalue  go to state 15


state 108

   43 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 120


state 109

   44 ty: ARRAY OF . typeid

    ID  shift, and go to state 54

    typeid  go to state 121


state 110

   30 expseq: exp SEMICOLON expseq .

    $default  reduce using rule 30 (expseq)


state 111

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   21    | typeid LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    PLUS      [reduce using rule 21 (exp)]
    MINUS     [reduce using rule 21 (exp)]
    TIMES     [reduce using rule 21 (exp)]
    DIVIDE    [reduce using rule 21 (exp)]
    EQ        [reduce using rule 21 (exp)]
    NEQ       [reduce using rule 21 (exp)]
    LT        [reduce using rule 21 (exp)]
    LE        [reduce using rule 21 (exp)]
    GT        [reduce using rule 21 (exp)]
    GE        [reduce using rule 21 (exp)]
    AND       [reduce using rule 21 (exp)]
    OR        [reduce using rule 21 (exp)]
    $default  reduce using rule 21 (exp)


state 112

   35 recList: ID . EQ exp

    EQ  shift, and go to state 122


state 113

   33 recList: COMMA . rec

    ID  shift, and go to state 71

    rec  go to state 123


state 114

   32 rec: ID EQ exp recList .

    $default  reduce using rule 32 (rec)


state 115

   26 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 124
    typeid  go to state 14
    lvalue  go to state 15


state 116

   47 tyfields: ID COLON typeid . tyfieldsList

    COMMA  shift, and go to state 125

    $default  reduce using rule 49 (tyfieldsList)

    tyfieldsList  go to state 126


state 117

   53 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . typeid EQ exp

    ID  shift, and go to state 54

    typeid  go to state 127


state 118

   52 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 128
    typeid  go to state 14
    lvalue  go to state 15


state 119

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   51 vardec: VAR ID COLON typeid ASSIGN exp .

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    $default  reduce using rule 51 (vardec)


state 120

   43 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 43 (ty)


state 121

   44 ty: ARRAY OF typeid .

    $default  reduce using rule 44 (ty)


state 122

   35 recList: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 129
    typeid  go to state 14
    lvalue  go to state 15


state 123

   33 recList: COMMA rec .

    $default  reduce using rule 33 (recList)


state 124

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   26    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    PLUS      [reduce using rule 26 (exp)]
    MINUS     [reduce using rule 26 (exp)]
    TIMES     [reduce using rule 26 (exp)]
    DIVIDE    [reduce using rule 26 (exp)]
    EQ        [reduce using rule 26 (exp)]
    NEQ       [reduce using rule 26 (exp)]
    LT        [reduce using rule 26 (exp)]
    LE        [reduce using rule 26 (exp)]
    GT        [reduce using rule 26 (exp)]
    GE        [reduce using rule 26 (exp)]
    AND       [reduce using rule 26 (exp)]
    OR        [reduce using rule 26 (exp)]
    $default  reduce using rule 26 (exp)


state 125

   48 tyfieldsList: COMMA . tyfields

    ID  shift, and go to state 91

    $default  reduce using rule 46 (tyfields)

    tyfields  go to state 130


state 126

   47 tyfields: ID COLON typeid tyfieldsList .

    $default  reduce using rule 47 (tyfields)


state 127

   53 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON typeid . EQ exp

    EQ  shift, and go to state 131


state 128

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   52 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    $default  reduce using rule 52 (fundec)


state 129

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   35 recList: ID EQ exp .

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    $default  reduce using rule 35 (recList)


state 130

   48 tyfieldsList: COMMA tyfields .

    $default  reduce using rule 48 (tyfieldsList)


state 131

   53 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON typeid EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 132
    typeid  go to state 14
    lvalue  go to state 15


state 132

    8 exp: exp . PLUS exp
    9    | exp . MINUS exp
   10    | exp . TIMES exp
   11    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . LT exp
   15    | exp . LE exp
   16    | exp . GT exp
   17    | exp . GE exp
   18    | exp . AND exp
   19    | exp . OR exp
   53 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON typeid EQ exp .

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    EQ      shift, and go to state 35
    NEQ     shift, and go to state 36
    LT      shift, and go to state 37
    LE      shift, and go to state 38
    GT      shift, and go to state 39
    GE      shift, and go to state 40
    AND     shift, and go to state 41
    OR      shift, and go to state 42

    $default  reduce using rule 53 (fundec)
