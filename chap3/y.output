State 76 conflicts: 12 shift/reduce
State 99 conflicts: 12 shift/reduce
State 121 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: ID
    3    | lvalue
    4    | NIL
    5    | LPAREN RPAREN
    6    | INT
    7    | STRING
    8    | MINUS exp
    9    | exp PLUS exp
   10    | exp MINUS exp
   11    | exp TIMES exp
   12    | exp DIVIDE exp
   13    | exp EQ exp
   14    | exp NEQ exp
   15    | exp LT exp
   16    | exp LE exp
   17    | exp GT exp
   18    | exp GE exp
   19    | exp AND exp
   20    | exp OR exp
   21    | ID LBRACE rec RBRACE
   22    | ID LBRACK exp RBRACK OF exp
   23    | lvalue ASSIGN exp
   24    | IF exp THEN exp ELSE exp
   25    | IF exp THEN exp
   26    | WHILE exp DO exp
   27    | FOR ID ASSIGN exp TO exp DO exp
   28    | BREAK
   29    | LET decs IN expseq END
   30    | LET decs IN END
   31    | LPAREN exp RPAREN

   32 expseq: exp SEMICOLON expseq
   33       | exp

   34 rec: ID EQ exp recList

   35 recList: COMMA rec
   36        | /* empty */
   37        | ID EQ exp

   38 decs: dec decs
   39     | /* empty */

   40 dec: tydec
   41    | vardec
   42    | fundec

   43 tydec: TYPE ID EQ ty

   44 ty: ID
   45   | LBRACE tyfields RBRACE
   46   | ARRAY OF ID

   47 tyfields: /* empty */
   48         | ID COLON ID tyfieldsList

   49 tyfieldsList: COMMA tyfields
   50             | /* empty */

   51 vardec: VAR ID ASSIGN exp
   52       | VAR ID COLON ID ASSIGN exp

   53 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   54       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   55 lvalue: lvalue DOT ID
   56       | ID LBRACK exp RBRACK


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 2 21 22 27 34 37 43 44 46 48 51 52 53 54 55 56
STRING (259) 7
INT (260) 6
COMMA (261) 35 49
COLON (262) 48 52 54
SEMICOLON (263) 32
LPAREN (264) 5 31 53 54
RPAREN (265) 5 31 53 54
LBRACK (266) 22 56
RBRACK (267) 22 56
LBRACE (268) 21 45
RBRACE (269) 21 45
DOT (270) 55
PLUS (271) 9
MINUS (272) 8 10
TIMES (273) 11
DIVIDE (274) 12
EQ (275) 13 34 37 43 53 54
NEQ (276) 14
LT (277) 15
LE (278) 16
GT (279) 17
GE (280) 18
AND (281) 19
OR (282) 20
ASSIGN (283) 23 27 51 52
ARRAY (284) 46
IF (285) 24 25
THEN (286) 24 25
ELSE (287) 24
WHILE (288) 26
FOR (289) 27
TO (290) 27
DO (291) 26 27
LET (292) 29 30
IN (293) 29 30
END (294) 29 30
OF (295) 22 46
BREAK (296) 28
NIL (297) 4
FUNCTION (298) 53 54
VAR (299) 51 52
TYPE (300) 43
UMINUS (301)
IFX (302)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
exp (50)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29 30 31, on right: 1 8 9 10 11 12 13 14 15 16
    17 18 19 20 22 23 24 25 26 27 31 32 33 34 37 51 52 53 54 56
expseq (51)
    on left: 32 33, on right: 29 32
rec (52)
    on left: 34, on right: 21 35
recList (53)
    on left: 35 36 37, on right: 34
decs (54)
    on left: 38 39, on right: 29 30 38
dec (55)
    on left: 40 41 42, on right: 38
tydec (56)
    on left: 43, on right: 40
ty (57)
    on left: 44 45 46, on right: 43
tyfields (58)
    on left: 47 48, on right: 45 49 53 54
tyfieldsList (59)
    on left: 49 50, on right: 48
vardec (60)
    on left: 51 52, on right: 41
fundec (61)
    on left: 53 54, on right: 42
lvalue (62)
    on left: 55 56, on right: 3 23 55


state 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program  go to state 12
    exp      go to state 13
    lvalue   go to state 14


state 1

    2 exp: ID .
   21    | ID . LBRACE rec RBRACE
   22    | ID . LBRACK exp RBRACK OF exp
   56 lvalue: ID . LBRACK exp RBRACK

    LBRACK  shift, and go to state 15
    LBRACE  shift, and go to state 16

    $default  reduce using rule 2 (exp)


state 2

    7 exp: STRING .

    $default  reduce using rule 7 (exp)


state 3

    6 exp: INT .

    $default  reduce using rule 6 (exp)


state 4

    5 exp: LPAREN . RPAREN
   31    | LPAREN . exp RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 17
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 18
    lvalue  go to state 14


state 5

    8 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 19
    lvalue  go to state 14


state 6

   24 exp: IF . exp THEN exp ELSE exp
   25    | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 20
    lvalue  go to state 14


state 7

   26 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 21
    lvalue  go to state 14


state 8

   27 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 22


state 9

   29 exp: LET . decs IN expseq END
   30    | LET . decs IN END

    FUNCTION  shift, and go to state 23
    VAR       shift, and go to state 24
    TYPE      shift, and go to state 25

    $default  reduce using rule 39 (decs)

    decs    go to state 26
    dec     go to state 27
    tydec   go to state 28
    vardec  go to state 29
    fundec  go to state 30


state 10

   28 exp: BREAK .

    $default  reduce using rule 28 (exp)


state 11

    4 exp: NIL .

    $default  reduce using rule 4 (exp)


state 12

    0 $accept: program . $end

    $end  shift, and go to state 31


state 13

    1 program: exp .
    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43

    $default  reduce using rule 1 (program)


state 14

    3 exp: lvalue .
   23    | lvalue . ASSIGN exp
   55 lvalue: lvalue . DOT ID

    DOT     shift, and go to state 44
    ASSIGN  shift, and go to state 45

    $default  reduce using rule 3 (exp)


state 15

   22 exp: ID LBRACK . exp RBRACK OF exp
   56 lvalue: ID LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 46
    lvalue  go to state 14


state 16

   21 exp: ID LBRACE . rec RBRACE

    ID  shift, and go to state 47

    rec  go to state 48


state 17

    5 exp: LPAREN RPAREN .

    $default  reduce using rule 5 (exp)


state 18

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   31    | LPAREN exp . RPAREN

    RPAREN  shift, and go to state 49
    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43


state 19

    8 exp: MINUS exp .
    9    | exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    $default  reduce using rule 8 (exp)


state 20

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   24    | IF exp . THEN exp ELSE exp
   25    | IF exp . THEN exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    THEN    shift, and go to state 50


state 21

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   26    | WHILE exp . DO exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    DO      shift, and go to state 51


state 22

   27 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 52


state 23

   53 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   54       | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 53


state 24

   51 vardec: VAR . ID ASSIGN exp
   52       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 54


state 25

   43 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 55


state 26

   29 exp: LET decs . IN expseq END
   30    | LET decs . IN END

    IN  shift, and go to state 56


state 27

   38 decs: dec . decs

    FUNCTION  shift, and go to state 23
    VAR       shift, and go to state 24
    TYPE      shift, and go to state 25

    $default  reduce using rule 39 (decs)

    decs    go to state 57
    dec     go to state 27
    tydec   go to state 28
    vardec  go to state 29
    fundec  go to state 30


state 28

   40 dec: tydec .

    $default  reduce using rule 40 (dec)


state 29

   41 dec: vardec .

    $default  reduce using rule 41 (dec)


state 30

   42 dec: fundec .

    $default  reduce using rule 42 (dec)


state 31

    0 $accept: program $end .

    $default  accept


state 32

    9 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 58
    lvalue  go to state 14


state 33

   10 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 59
    lvalue  go to state 14


state 34

   11 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 60
    lvalue  go to state 14


state 35

   12 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 61
    lvalue  go to state 14


state 36

   13 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 62
    lvalue  go to state 14


state 37

   14 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 63
    lvalue  go to state 14


state 38

   15 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 64
    lvalue  go to state 14


state 39

   16 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 65
    lvalue  go to state 14


state 40

   17 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 66
    lvalue  go to state 14


state 41

   18 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 67
    lvalue  go to state 14


state 42

   19 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 68
    lvalue  go to state 14


state 43

   20 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 69
    lvalue  go to state 14


state 44

   55 lvalue: lvalue DOT . ID

    ID  shift, and go to state 70


state 45

   23 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 71
    lvalue  go to state 14


state 46

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   22    | ID LBRACK exp . RBRACK OF exp
   56 lvalue: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 72
    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43


state 47

   34 rec: ID . EQ exp recList

    EQ  shift, and go to state 73


state 48

   21 exp: ID LBRACE rec . RBRACE

    RBRACE  shift, and go to state 74


state 49

   31 exp: LPAREN exp RPAREN .

    $default  reduce using rule 31 (exp)


state 50

   24 exp: IF exp THEN . exp ELSE exp
   25    | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 75
    lvalue  go to state 14


state 51

   26 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 76
    lvalue  go to state 14


state 52

   27 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 77
    lvalue  go to state 14


state 53

   53 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   54       | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 78


state 54

   51 vardec: VAR ID . ASSIGN exp
   52       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 79
    ASSIGN  shift, and go to state 80


state 55

   43 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 81


state 56

   29 exp: LET decs IN . expseq END
   30    | LET decs IN . END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    END     shift, and go to state 82
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 83
    expseq  go to state 84
    lvalue  go to state 14


state 57

   38 decs: dec decs .

    $default  reduce using rule 38 (decs)


state 58

    9 exp: exp . PLUS exp
    9    | exp PLUS exp .
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35

    $default  reduce using rule 9 (exp)


state 59

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   10    | exp MINUS exp .
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35

    $default  reduce using rule 10 (exp)


state 60

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   11    | exp TIMES exp .
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    $default  reduce using rule 11 (exp)


state 61

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   12    | exp DIVIDE exp .
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    $default  reduce using rule 12 (exp)


state 62

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   13    | exp EQ exp .
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 13 (exp)


state 63

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   14    | exp NEQ exp .
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 14 (exp)


state 64

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   15    | exp LT exp .
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 15 (exp)


state 65

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   16    | exp LE exp .
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 16 (exp)


state 66

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   17    | exp GT exp .
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 17 (exp)


state 67

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   18    | exp GE exp .
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 18 (exp)


state 68

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   19    | exp AND exp .
   20    | exp . OR exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41

    $default  reduce using rule 19 (exp)


state 69

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   20    | exp OR exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41

    $default  reduce using rule 20 (exp)


state 70

   55 lvalue: lvalue DOT ID .

    $default  reduce using rule 55 (lvalue)


state 71

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   23    | lvalue ASSIGN exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43

    $default  reduce using rule 23 (exp)


state 72

   22 exp: ID LBRACK exp RBRACK . OF exp
   56 lvalue: ID LBRACK exp RBRACK .

    OF  shift, and go to state 85

    $default  reduce using rule 56 (lvalue)


state 73

   34 rec: ID EQ . exp recList

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 86
    lvalue  go to state 14


state 74

   21 exp: ID LBRACE rec RBRACE .

    $default  reduce using rule 21 (exp)


state 75

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   24    | IF exp THEN exp . ELSE exp
   25    | IF exp THEN exp .

    ELSE  shift, and go to state 87

    $default  reduce using rule 25 (exp)


state 76

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   26    | WHILE exp DO exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43

    PLUS      [reduce using rule 26 (exp)]
    MINUS     [reduce using rule 26 (exp)]
    TIMES     [reduce using rule 26 (exp)]
    DIVIDE    [reduce using rule 26 (exp)]
    EQ        [reduce using rule 26 (exp)]
    NEQ       [reduce using rule 26 (exp)]
    LT        [reduce using rule 26 (exp)]
    LE        [reduce using rule 26 (exp)]
    GT        [reduce using rule 26 (exp)]
    GE        [reduce using rule 26 (exp)]
    AND       [reduce using rule 26 (exp)]
    OR        [reduce using rule 26 (exp)]
    $default  reduce using rule 26 (exp)


state 77

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   27    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    TO      shift, and go to state 88


state 78

   53 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   54       | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 89

    $default  reduce using rule 47 (tyfields)

    tyfields  go to state 90


state 79

   52 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 91


state 80

   51 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 92
    lvalue  go to state 14


state 81

   43 tydec: TYPE ID EQ . ty

    ID      shift, and go to state 93
    LBRACE  shift, and go to state 94
    ARRAY   shift, and go to state 95

    ty  go to state 96


state 82

   30 exp: LET decs IN END .

    $default  reduce using rule 30 (exp)


state 83

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   32 expseq: exp . SEMICOLON expseq
   33       | exp .

    SEMICOLON  shift, and go to state 97
    PLUS       shift, and go to state 32
    MINUS      shift, and go to state 33
    TIMES      shift, and go to state 34
    DIVIDE     shift, and go to state 35
    EQ         shift, and go to state 36
    NEQ        shift, and go to state 37
    LT         shift, and go to state 38
    LE         shift, and go to state 39
    GT         shift, and go to state 40
    GE         shift, and go to state 41
    AND        shift, and go to state 42
    OR         shift, and go to state 43

    $default  reduce using rule 33 (expseq)


state 84

   29 exp: LET decs IN expseq . END

    END  shift, and go to state 98


state 85

   22 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 99
    lvalue  go to state 14


state 86

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   34 rec: ID EQ exp . recList

    ID      shift, and go to state 100
    COMMA   shift, and go to state 101
    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43

    $default  reduce using rule 36 (recList)

    recList  go to state 102


state 87

   24 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 103
    lvalue  go to state 14


state 88

   27 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 104
    lvalue  go to state 14


state 89

   48 tyfields: ID . COLON ID tyfieldsList

    COLON  shift, and go to state 105


state 90

   53 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   54       | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 106


state 91

   52 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 107


state 92

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   51 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43

    $default  reduce using rule 51 (vardec)


state 93

   44 ty: ID .

    $default  reduce using rule 44 (ty)


state 94

   45 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 89

    $default  reduce using rule 47 (tyfields)

    tyfields  go to state 108


state 95

   46 ty: ARRAY . OF ID

    OF  shift, and go to state 109


state 96

   43 tydec: TYPE ID EQ ty .

    $default  reduce using rule 43 (tydec)


state 97

   32 expseq: exp SEMICOLON . expseq

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 83
    expseq  go to state 110
    lvalue  go to state 14


state 98

   29 exp: LET decs IN expseq END .

    $default  reduce using rule 29 (exp)


state 99

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   22    | ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43

    PLUS      [reduce using rule 22 (exp)]
    MINUS     [reduce using rule 22 (exp)]
    TIMES     [reduce using rule 22 (exp)]
    DIVIDE    [reduce using rule 22 (exp)]
    EQ        [reduce using rule 22 (exp)]
    NEQ       [reduce using rule 22 (exp)]
    LT        [reduce using rule 22 (exp)]
    LE        [reduce using rule 22 (exp)]
    GT        [reduce using rule 22 (exp)]
    GE        [reduce using rule 22 (exp)]
    AND       [reduce using rule 22 (exp)]
    OR        [reduce using rule 22 (exp)]
    $default  reduce using rule 22 (exp)


state 100

   37 recList: ID . EQ exp

    EQ  shift, and go to state 111


state 101

   35 recList: COMMA . rec

    ID  shift, and go to state 47

    rec  go to state 112


state 102

   34 rec: ID EQ exp recList .

    $default  reduce using rule 34 (rec)


state 103

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   24    | IF exp THEN exp ELSE exp .

    $default  reduce using rule 24 (exp)


state 104

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   27    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    DO      shift, and go to state 113


state 105

   48 tyfields: ID COLON . ID tyfieldsList

    ID  shift, and go to state 114


state 106

   53 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   54       | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 115
    EQ     shift, and go to state 116


state 107

   52 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 117
    lvalue  go to state 14


state 108

   45 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 118


state 109

   46 ty: ARRAY OF . ID

    ID  shift, and go to state 119


state 110

   32 expseq: exp SEMICOLON expseq .

    $default  reduce using rule 32 (expseq)


state 111

   37 recList: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 120
    lvalue  go to state 14


state 112

   35 recList: COMMA rec .

    $default  reduce using rule 35 (recList)


state 113

   27 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 121
    lvalue  go to state 14


state 114

   48 tyfields: ID COLON ID . tyfieldsList

    COMMA  shift, and go to state 122

    $default  reduce using rule 50 (tyfieldsList)

    tyfieldsList  go to state 123


state 115

   54 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 124


state 116

   53 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 125
    lvalue  go to state 14


state 117

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   52 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43

    $default  reduce using rule 52 (vardec)


state 118

   45 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 45 (ty)


state 119

   46 ty: ARRAY OF ID .

    $default  reduce using rule 46 (ty)


state 120

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   37 recList: ID EQ exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43

    $default  reduce using rule 37 (recList)


state 121

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   27    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43

    PLUS      [reduce using rule 27 (exp)]
    MINUS     [reduce using rule 27 (exp)]
    TIMES     [reduce using rule 27 (exp)]
    DIVIDE    [reduce using rule 27 (exp)]
    EQ        [reduce using rule 27 (exp)]
    NEQ       [reduce using rule 27 (exp)]
    LT        [reduce using rule 27 (exp)]
    LE        [reduce using rule 27 (exp)]
    GT        [reduce using rule 27 (exp)]
    GE        [reduce using rule 27 (exp)]
    AND       [reduce using rule 27 (exp)]
    OR        [reduce using rule 27 (exp)]
    $default  reduce using rule 27 (exp)


state 122

   49 tyfieldsList: COMMA . tyfields

    ID  shift, and go to state 89

    $default  reduce using rule 47 (tyfields)

    tyfields  go to state 126


state 123

   48 tyfields: ID COLON ID tyfieldsList .

    $default  reduce using rule 48 (tyfields)


state 124

   54 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 127


state 125

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   53 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43

    $default  reduce using rule 53 (fundec)


state 126

   49 tyfieldsList: COMMA tyfields .

    $default  reduce using rule 49 (tyfieldsList)


state 127

   54 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 128
    lvalue  go to state 14


state 128

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   54 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43

    $default  reduce using rule 54 (fundec)
