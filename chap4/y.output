State 1 conflicts: 1 shift/reduce
State 31 conflicts: 1 shift/reduce
State 65 conflicts: 1 shift/reduce
State 88 conflicts: 12 shift/reduce
State 109 conflicts: 1 shift/reduce
State 112 conflicts: 12 shift/reduce
State 134 conflicts: 12 shift/reduce
State 143 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: lvalue
    3    | NIL
    4    | LPAREN expseq RPAREN
    5    | INT
    6    | STRING
    7    | ID LPAREN expList RPAREN
    8    | ID LPAREN RPAREN
    9    | MINUS exp
   10    | exp PLUS exp
   11    | exp MINUS exp
   12    | exp DIVIDE exp
   13    | exp TIMES exp
   14    | exp EQ exp
   15    | exp NEQ exp
   16    | exp LT exp
   17    | exp LE exp
   18    | exp GT exp
   19    | exp GE exp
   20    | exp AND exp
   21    | exp OR exp
   22    | ID LBRACE RBRACE
   23    | ID LBRACE recList RBRACE
   24    | ID LBRACK exp RBRACK OF exp
   25    | IF exp THEN exp ELSE exp
   26    | IF exp THEN exp
   27    | WHILE exp DO exp
   28    | FOR ID ASSIGN exp TO exp DO exp
   29    | BREAK
   30    | LET decs IN expseq END

   31 lvalue: ID
   32       | lvalue DOT ID
   33       | lvalue LBRACK exp RBRACK

   34 expseq: exp SEMICOLON expseq
   35       | exp
   36       | /* empty */

   37 expList: exp expList2

   38 expList2: COMMA exp expList2
   39         | /* empty */

   40 recList: ID EQ exp recList2

   41 recList2: COMMA ID EQ exp recList2
   42         | /* empty */

   43 decs: dec decs
   44     | /* empty */

   45 dec: tydec
   46    | fundec
   47    | VAR ID ASSIGN exp
   48    | VAR ID COLON ID ASSIGN exp

   49 tydec: TYPE ID EQ ty typeList

   50 typeList: TYPE ID EQ ty typeList
   51         | /* empty */

   52 ty: ID
   53   | LBRACE tyfields RBRACE
   54   | ARRAY OF ID

   55 tyfields: /* empty */
   56         | ID COLON ID tyfieldsList

   57 tyfieldsList: COMMA ID COLON ID tyfieldsList
   58             | /* empty */

   59 fundec: function functionList

   60 functionList: function functionList
   61             | /* empty */

   62 function: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   63         | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 7 8 22 23 24 28 31 32 40 41 47 48 49 50 52 54 56 57 62 63
STRING (259) 6
INT (260) 5
COMMA (261) 38 41 57
COLON (262) 48 56 57 63
SEMICOLON (263) 34
LPAREN (264) 4 7 8 62 63
RPAREN (265) 4 7 8 62 63
LBRACK (266) 24 33
RBRACK (267) 24 33
LBRACE (268) 22 23 53
RBRACE (269) 22 23 53
DOT (270) 32
PLUS (271) 10
MINUS (272) 9 11
TIMES (273) 13
DIVIDE (274) 12
EQ (275) 14 40 41 49 50 62 63
NEQ (276) 15
LT (277) 16
LE (278) 17
GT (279) 18
GE (280) 19
AND (281) 20
OR (282) 21
ASSIGN (283) 28 47 48
ARRAY (284) 54
IF (285) 25 26
THEN (286) 25 26
ELSE (287) 25
WHILE (288) 27
FOR (289) 28
TO (290) 28
DO (291) 27 28
LET (292) 30
IN (293) 30
END (294) 30
OF (295) 24 54
BREAK (296) 29
NIL (297) 3
FUNCTION (298) 62 63
VAR (299) 47 48
TYPE (300) 49 50
IFX (301)
UMINUS (302)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
exp (50)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29 30, on right: 1 9 10 11 12 13 14 15 16 17
    18 19 20 21 24 25 26 27 28 33 34 35 37 38 40 41 47 48 62 63
lvalue (51)
    on left: 31 32 33, on right: 2 32 33
expseq (52)
    on left: 34 35 36, on right: 4 30 34
expList (53)
    on left: 37, on right: 7
expList2 (54)
    on left: 38 39, on right: 37 38
recList (55)
    on left: 40, on right: 23
recList2 (56)
    on left: 41 42, on right: 40 41
decs (57)
    on left: 43 44, on right: 30 43
dec (58)
    on left: 45 46 47 48, on right: 43
tydec (59)
    on left: 49, on right: 45
typeList (60)
    on left: 50 51, on right: 49 50
ty (61)
    on left: 52 53 54, on right: 49 50
tyfields (62)
    on left: 55 56, on right: 53 62 63
tyfieldsList (63)
    on left: 57 58, on right: 56 57
fundec (64)
    on left: 59, on right: 46
functionList (65)
    on left: 60 61, on right: 59 60
function (66)
    on left: 62 63, on right: 59 60


state 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program  go to state 12
    exp      go to state 13
    lvalue   go to state 14


state 1

    7 exp: ID . LPAREN expList RPAREN
    8    | ID . LPAREN RPAREN
   22    | ID . LBRACE RBRACE
   23    | ID . LBRACE recList RBRACE
   24    | ID . LBRACK exp RBRACK OF exp
   31 lvalue: ID .

    LPAREN  shift, and go to state 15
    LBRACK  shift, and go to state 16
    LBRACE  shift, and go to state 17

    LBRACK    [reduce using rule 31 (lvalue)]
    $default  reduce using rule 31 (lvalue)


state 2

    6 exp: STRING .

    $default  reduce using rule 6 (exp)


state 3

    5 exp: INT .

    $default  reduce using rule 5 (exp)


state 4

    4 exp: LPAREN . expseq RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 36 (expseq)

    exp     go to state 18
    lvalue  go to state 14
    expseq  go to state 19


state 5

    9 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 20
    lvalue  go to state 14


state 6

   25 exp: IF . exp THEN exp ELSE exp
   26    | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 21
    lvalue  go to state 14


state 7

   27 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 22
    lvalue  go to state 14


state 8

   28 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 23


state 9

   30 exp: LET . decs IN expseq END

    FUNCTION  shift, and go to state 24
    VAR       shift, and go to state 25
    TYPE      shift, and go to state 26

    $default  reduce using rule 44 (decs)

    decs      go to state 27
    dec       go to state 28
    tydec     go to state 29
    fundec    go to state 30
    function  go to state 31


state 10

   29 exp: BREAK .

    $default  reduce using rule 29 (exp)


state 11

    3 exp: NIL .

    $default  reduce using rule 3 (exp)


state 12

    0 $accept: program . $end

    $end  shift, and go to state 32


state 13

    1 program: exp .
   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 1 (program)


state 14

    2 exp: lvalue .
   32 lvalue: lvalue . DOT ID
   33       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 45
    DOT     shift, and go to state 46

    $default  reduce using rule 2 (exp)


state 15

    7 exp: ID LPAREN . expList RPAREN
    8    | ID LPAREN . RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 47
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 48
    lvalue   go to state 14
    expList  go to state 49


state 16

   24 exp: ID LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 50
    lvalue  go to state 14


state 17

   22 exp: ID LBRACE . RBRACE
   23    | ID LBRACE . recList RBRACE

    ID      shift, and go to state 51
    RBRACE  shift, and go to state 52

    recList  go to state 53


state 18

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   34 expseq: exp . SEMICOLON expseq
   35       | exp .

    SEMICOLON  shift, and go to state 54
    PLUS       shift, and go to state 33
    MINUS      shift, and go to state 34
    TIMES      shift, and go to state 35
    DIVIDE     shift, and go to state 36
    EQ         shift, and go to state 37
    NEQ        shift, and go to state 38
    LT         shift, and go to state 39
    LE         shift, and go to state 40
    GT         shift, and go to state 41
    GE         shift, and go to state 42
    AND        shift, and go to state 43
    OR         shift, and go to state 44

    $default  reduce using rule 35 (expseq)


state 19

    4 exp: LPAREN expseq . RPAREN

    RPAREN  shift, and go to state 55


state 20

    9 exp: MINUS exp .
   10    | exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    $default  reduce using rule 9 (exp)


state 21

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   25    | IF exp . THEN exp ELSE exp
   26    | IF exp . THEN exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44
    THEN    shift, and go to state 56


state 22

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   27    | WHILE exp . DO exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44
    DO      shift, and go to state 57


state 23

   28 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 58


state 24

   62 function: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   63         | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 59


state 25

   47 dec: VAR . ID ASSIGN exp
   48    | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 60


state 26

   49 tydec: TYPE . ID EQ ty typeList

    ID  shift, and go to state 61


state 27

   30 exp: LET decs . IN expseq END

    IN  shift, and go to state 62


state 28

   43 decs: dec . decs

    FUNCTION  shift, and go to state 24
    VAR       shift, and go to state 25
    TYPE      shift, and go to state 26

    $default  reduce using rule 44 (decs)

    decs      go to state 63
    dec       go to state 28
    tydec     go to state 29
    fundec    go to state 30
    function  go to state 31


state 29

   45 dec: tydec .

    $default  reduce using rule 45 (dec)


state 30

   46 dec: fundec .

    $default  reduce using rule 46 (dec)


state 31

   59 fundec: function . functionList

    FUNCTION  shift, and go to state 24

    FUNCTION  [reduce using rule 61 (functionList)]
    $default  reduce using rule 61 (functionList)

    functionList  go to state 64
    function      go to state 65


state 32

    0 $accept: program $end .

    $default  accept


state 33

   10 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 66
    lvalue  go to state 14


state 34

   11 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 67
    lvalue  go to state 14


state 35

   13 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 68
    lvalue  go to state 14


state 36

   12 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 69
    lvalue  go to state 14


state 37

   14 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 70
    lvalue  go to state 14


state 38

   15 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 71
    lvalue  go to state 14


state 39

   16 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 72
    lvalue  go to state 14


state 40

   17 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 73
    lvalue  go to state 14


state 41

   18 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 74
    lvalue  go to state 14


state 42

   19 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 75
    lvalue  go to state 14


state 43

   20 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 76
    lvalue  go to state 14


state 44

   21 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 77
    lvalue  go to state 14


state 45

   33 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 78
    lvalue  go to state 14


state 46

   32 lvalue: lvalue DOT . ID

    ID  shift, and go to state 79


state 47

    8 exp: ID LPAREN RPAREN .

    $default  reduce using rule 8 (exp)


state 48

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   37 expList: exp . expList2

    COMMA   shift, and go to state 80
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 39 (expList2)

    expList2  go to state 81


state 49

    7 exp: ID LPAREN expList . RPAREN

    RPAREN  shift, and go to state 82


state 50

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   24    | ID LBRACK exp . RBRACK OF exp

    RBRACK  shift, and go to state 83
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44


state 51

   40 recList: ID . EQ exp recList2

    EQ  shift, and go to state 84


state 52

   22 exp: ID LBRACE RBRACE .

    $default  reduce using rule 22 (exp)


state 53

   23 exp: ID LBRACE recList . RBRACE

    RBRACE  shift, and go to state 85


state 54

   34 expseq: exp SEMICOLON . expseq

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 36 (expseq)

    exp     go to state 18
    lvalue  go to state 14
    expseq  go to state 86


state 55

    4 exp: LPAREN expseq RPAREN .

    $default  reduce using rule 4 (exp)


state 56

   25 exp: IF exp THEN . exp ELSE exp
   26    | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 87
    lvalue  go to state 14


state 57

   27 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 88
    lvalue  go to state 14


state 58

   28 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 89
    lvalue  go to state 14


state 59

   62 function: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   63         | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 90


state 60

   47 dec: VAR ID . ASSIGN exp
   48    | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 91
    ASSIGN  shift, and go to state 92


state 61

   49 tydec: TYPE ID . EQ ty typeList

    EQ  shift, and go to state 93


state 62

   30 exp: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 36 (expseq)

    exp     go to state 18
    lvalue  go to state 14
    expseq  go to state 94


state 63

   43 decs: dec decs .

    $default  reduce using rule 43 (decs)


state 64

   59 fundec: function functionList .

    $default  reduce using rule 59 (fundec)


state 65

   60 functionList: function . functionList

    FUNCTION  shift, and go to state 24

    FUNCTION  [reduce using rule 61 (functionList)]
    $default  reduce using rule 61 (functionList)

    functionList  go to state 95
    function      go to state 65


state 66

   10 exp: exp . PLUS exp
   10    | exp PLUS exp .
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36

    $default  reduce using rule 10 (exp)


state 67

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   11    | exp MINUS exp .
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36

    $default  reduce using rule 11 (exp)


state 68

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   13    | exp TIMES exp .
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    $default  reduce using rule 13 (exp)


state 69

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   12    | exp DIVIDE exp .
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    $default  reduce using rule 12 (exp)


state 70

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   14    | exp EQ exp .
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 14 (exp)


state 71

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   15    | exp NEQ exp .
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 15 (exp)


state 72

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   16    | exp LT exp .
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 16 (exp)


state 73

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   17    | exp LE exp .
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 17 (exp)


state 74

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   18    | exp GT exp .
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 18 (exp)


state 75

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   19    | exp GE exp .
   20    | exp . AND exp
   21    | exp . OR exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 19 (exp)


state 76

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   20    | exp AND exp .
   21    | exp . OR exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42

    $default  reduce using rule 20 (exp)


state 77

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   21    | exp OR exp .

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42

    $default  reduce using rule 21 (exp)


state 78

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   33 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 96
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44


state 79

   32 lvalue: lvalue DOT ID .

    $default  reduce using rule 32 (lvalue)


state 80

   38 expList2: COMMA . exp expList2

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 97
    lvalue  go to state 14


state 81

   37 expList: exp expList2 .

    $default  reduce using rule 37 (expList)


state 82

    7 exp: ID LPAREN expList RPAREN .

    $default  reduce using rule 7 (exp)


state 83

   24 exp: ID LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 98


state 84

   40 recList: ID EQ . exp recList2

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 99
    lvalue  go to state 14


state 85

   23 exp: ID LBRACE recList RBRACE .

    $default  reduce using rule 23 (exp)


state 86

   34 expseq: exp SEMICOLON expseq .

    $default  reduce using rule 34 (expseq)


state 87

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   25    | IF exp THEN exp . ELSE exp
   26    | IF exp THEN exp .

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44
    ELSE    shift, and go to state 100

    $default  reduce using rule 26 (exp)


state 88

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   27    | WHILE exp DO exp .

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    PLUS      [reduce using rule 27 (exp)]
    MINUS     [reduce using rule 27 (exp)]
    TIMES     [reduce using rule 27 (exp)]
    DIVIDE    [reduce using rule 27 (exp)]
    EQ        [reduce using rule 27 (exp)]
    NEQ       [reduce using rule 27 (exp)]
    LT        [reduce using rule 27 (exp)]
    LE        [reduce using rule 27 (exp)]
    GT        [reduce using rule 27 (exp)]
    GE        [reduce using rule 27 (exp)]
    AND       [reduce using rule 27 (exp)]
    OR        [reduce using rule 27 (exp)]
    $default  reduce using rule 27 (exp)


state 89

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   28    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44
    TO      shift, and go to state 101


state 90

   62 function: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   63         | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 102

    $default  reduce using rule 55 (tyfields)

    tyfields  go to state 103


state 91

   48 dec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 104


state 92

   47 dec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 105
    lvalue  go to state 14


state 93

   49 tydec: TYPE ID EQ . ty typeList

    ID      shift, and go to state 106
    LBRACE  shift, and go to state 107
    ARRAY   shift, and go to state 108

    ty  go to state 109


state 94

   30 exp: LET decs IN expseq . END

    END  shift, and go to state 110


state 95

   60 functionList: function functionList .

    $default  reduce using rule 60 (functionList)


state 96

   33 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 33 (lvalue)


state 97

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   38 expList2: COMMA exp . expList2

    COMMA   shift, and go to state 80
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 39 (expList2)

    expList2  go to state 111


state 98

   24 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 112
    lvalue  go to state 14


state 99

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   40 recList: ID EQ exp . recList2

    COMMA   shift, and go to state 113
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 42 (recList2)

    recList2  go to state 114


state 100

   25 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 115
    lvalue  go to state 14


state 101

   28 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 116
    lvalue  go to state 14


state 102

   56 tyfields: ID . COLON ID tyfieldsList

    COLON  shift, and go to state 117


state 103

   62 function: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   63         | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 118


state 104

   48 dec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 119


state 105

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   47 dec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 47 (dec)


state 106

   52 ty: ID .

    $default  reduce using rule 52 (ty)


state 107

   53 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 102

    $default  reduce using rule 55 (tyfields)

    tyfields  go to state 120


state 108

   54 ty: ARRAY . OF ID

    OF  shift, and go to state 121


state 109

   49 tydec: TYPE ID EQ ty . typeList

    TYPE  shift, and go to state 122

    TYPE      [reduce using rule 51 (typeList)]
    $default  reduce using rule 51 (typeList)

    typeList  go to state 123


state 110

   30 exp: LET decs IN expseq END .

    $default  reduce using rule 30 (exp)


state 111

   38 expList2: COMMA exp expList2 .

    $default  reduce using rule 38 (expList2)


state 112

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   24    | ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    PLUS      [reduce using rule 24 (exp)]
    MINUS     [reduce using rule 24 (exp)]
    TIMES     [reduce using rule 24 (exp)]
    DIVIDE    [reduce using rule 24 (exp)]
    EQ        [reduce using rule 24 (exp)]
    NEQ       [reduce using rule 24 (exp)]
    LT        [reduce using rule 24 (exp)]
    LE        [reduce using rule 24 (exp)]
    GT        [reduce using rule 24 (exp)]
    GE        [reduce using rule 24 (exp)]
    AND       [reduce using rule 24 (exp)]
    OR        [reduce using rule 24 (exp)]
    $default  reduce using rule 24 (exp)


state 113

   41 recList2: COMMA . ID EQ exp recList2

    ID  shift, and go to state 124


state 114

   40 recList: ID EQ exp recList2 .

    $default  reduce using rule 40 (recList)


state 115

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   25    | IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 25 (exp)


state 116

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   28    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44
    DO      shift, and go to state 125


state 117

   56 tyfields: ID COLON . ID tyfieldsList

    ID  shift, and go to state 126


state 118

   62 function: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   63         | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 127
    EQ     shift, and go to state 128


state 119

   48 dec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 129
    lvalue  go to state 14


state 120

   53 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 130


state 121

   54 ty: ARRAY OF . ID

    ID  shift, and go to state 131


state 122

   50 typeList: TYPE . ID EQ ty typeList

    ID  shift, and go to state 132


state 123

   49 tydec: TYPE ID EQ ty typeList .

    $default  reduce using rule 49 (tydec)


state 124

   41 recList2: COMMA ID . EQ exp recList2

    EQ  shift, and go to state 133


state 125

   28 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 134
    lvalue  go to state 14


state 126

   56 tyfields: ID COLON ID . tyfieldsList

    COMMA  shift, and go to state 135

    $default  reduce using rule 58 (tyfieldsList)

    tyfieldsList  go to state 136


state 127

   63 function: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 137


state 128

   62 function: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 138
    lvalue  go to state 14


state 129

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   48 dec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 48 (dec)


state 130

   53 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 53 (ty)


state 131

   54 ty: ARRAY OF ID .

    $default  reduce using rule 54 (ty)


state 132

   50 typeList: TYPE ID . EQ ty typeList

    EQ  shift, and go to state 139


state 133

   41 recList2: COMMA ID EQ . exp recList2

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 140
    lvalue  go to state 14


state 134

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   28    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    PLUS      [reduce using rule 28 (exp)]
    MINUS     [reduce using rule 28 (exp)]
    TIMES     [reduce using rule 28 (exp)]
    DIVIDE    [reduce using rule 28 (exp)]
    EQ        [reduce using rule 28 (exp)]
    NEQ       [reduce using rule 28 (exp)]
    LT        [reduce using rule 28 (exp)]
    LE        [reduce using rule 28 (exp)]
    GT        [reduce using rule 28 (exp)]
    GE        [reduce using rule 28 (exp)]
    AND       [reduce using rule 28 (exp)]
    OR        [reduce using rule 28 (exp)]
    $default  reduce using rule 28 (exp)


state 135

   57 tyfieldsList: COMMA . ID COLON ID tyfieldsList

    ID  shift, and go to state 141


state 136

   56 tyfields: ID COLON ID tyfieldsList .

    $default  reduce using rule 56 (tyfields)


state 137

   63 function: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 142


state 138

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   62 function: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 62 (function)


state 139

   50 typeList: TYPE ID EQ . ty typeList

    ID      shift, and go to state 106
    LBRACE  shift, and go to state 107
    ARRAY   shift, and go to state 108

    ty  go to state 143


state 140

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   41 recList2: COMMA ID EQ exp . recList2

    COMMA   shift, and go to state 113
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 42 (recList2)

    recList2  go to state 144


state 141

   57 tyfieldsList: COMMA ID . COLON ID tyfieldsList

    COLON  shift, and go to state 145


state 142

   63 function: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 146
    lvalue  go to state 14


state 143

   50 typeList: TYPE ID EQ ty . typeList

    TYPE  shift, and go to state 122

    TYPE      [reduce using rule 51 (typeList)]
    $default  reduce using rule 51 (typeList)

    typeList  go to state 147


state 144

   41 recList2: COMMA ID EQ exp recList2 .

    $default  reduce using rule 41 (recList2)


state 145

   57 tyfieldsList: COMMA ID COLON . ID tyfieldsList

    ID  shift, and go to state 148


state 146

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . DIVIDE exp
   13    | exp . TIMES exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   63 function: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 63 (function)


state 147

   50 typeList: TYPE ID EQ ty typeList .

    $default  reduce using rule 50 (typeList)


state 148

   57 tyfieldsList: COMMA ID COLON ID . tyfieldsList

    COMMA  shift, and go to state 135

    $default  reduce using rule 58 (tyfieldsList)

    tyfieldsList  go to state 149


state 149

   57 tyfieldsList: COMMA ID COLON ID tyfieldsList .

    $default  reduce using rule 57 (tyfieldsList)
